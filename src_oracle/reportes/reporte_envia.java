/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package reportes;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import conexion.conectar;
import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
/**
 *
 * @author Usuario
 */
public class reporte_envia extends javax.swing.JInternalFrame {

    /**
     * Creates new form reporte_bus
     */
    public reporte_envia() {
        initComponents();
        setLocation(200,100);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        n = new javax.swing.JButton();
        cbuscar = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("reporte envia");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("nostrat tabla");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        n.setText("buscar por ci destinatario");
        n.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nActionPerformed(evt);
            }
        });

        cbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbuscarActionPerformed(evt);
            }
        });

        jButton2.setText("salir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jToggleButton1.setText("generar pdf");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(n)
                        .addGap(18, 18, 18)
                        .addComponent(cbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addComponent(jToggleButton1)
                        .addGap(37, 37, 37)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(n)
                    .addComponent(cbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jToggleButton1))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try
        {
            conectar conexion = new conectar();
          

            Statement stm = conexion.optenerConexion().createStatement();
            String n = cbuscar.getText();

            String consulta = "SELECT * FROM envia ";
            ResultSet rst = stm.executeQuery(consulta);
            java.sql.ResultSetMetaData rsMd = rst.getMetaData();

            int numeroColumnas = rsMd.getColumnCount();
            DefaultTableModel modelo = new DefaultTableModel();
            this.jTable1.setModel(modelo);

            for(int x=1; x<=numeroColumnas; x++)
            modelo.addColumn(rsMd.getColumnLabel(x));

            while(rst.next())
            {
                Object [] fila = new Object [numeroColumnas];

                for(int y=0;y<numeroColumnas; y++)
                fila[y] =rst.getObject(y+1);

                modelo.addRow(fila);
            }
        }//Final de try

        catch(Exception e)
        {
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void nActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nActionPerformed
        try
        {
            conectar conexion = new conectar();
            //              DriverManager.registerDriver(new org.gjt.mm.mysql.Driver());
            //              Connection conexion = DriverManager.getConnection ("jdbc:mysql://localhost/unsxx","root","123");

            //DriverManager.registerDriver(new org.postgresql.Driver());
            //Connection conexion = DriverManager.getConnection ("jdbc:postgresql://localhost/unsxx","postgres","123");

            //String url = "jdbc:oracle:thin:@localhost:1521:xe";
            //Connection conn = DriverManager.getConnection(url, "congreso", "nelson");

            Statement stm = conexion.optenerConexion().createStatement();
            String n = cbuscar.getText();

            String consulta = "SELECT * FROM envia WHERE ci_destinatario= " + "'"+n+"'";
            ResultSet rst = stm.executeQuery(consulta);
            java.sql.ResultSetMetaData rsMd = rst.getMetaData();

            int numeroColumnas = rsMd.getColumnCount();
            DefaultTableModel modelo = new DefaultTableModel();
            this.jTable1.setModel(modelo);

            for(int x=1; x<=numeroColumnas; x++)
            modelo.addColumn(rsMd.getColumnLabel(x));

            while(rst.next())
            {
                Object [] fila = new Object [numeroColumnas];

                for(int y=0;y<numeroColumnas; y++)
                fila[y] =rst.getObject(y+1);

                modelo.addRow(fila);
            }
        }//Final de try

        catch(Exception e)
        {
            System.out.println(e);
        }
    }//GEN-LAST:event_nActionPerformed

    private void cbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbuscarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
       Document document = new Document();
        try {
            // Ruta de salida del archivo PDF
            String rutaSalida = "d:\\reportes net\\enviaReporte.pdf"; // Cambiar ruta aquí
            PdfWriter.getInstance(document, new FileOutputStream(rutaSalida));
            document.open();

            // Título del documento
            Paragraph title = new Paragraph("Reporte de envia");
            title.setAlignment(Element.ALIGN_CENTER);
            document.add(title);
            document.add(new Paragraph(" ")); // Espacio entre título y tabla

            // Usar la conexión existente
            conectar conn = new conectar();  // Instanciar tu clase de conexión
            Connection connection = conn.optenerConexion();  // Obtener la conexión

            // Verificar si la conexión es exitosa
            if (connection != null) {
                Statement statement = connection.createStatement();
                String query = "SELECT * FROM envia";
                ResultSet resultSet = statement.executeQuery(query);

                // Crear una tabla PDF
                PdfPTable table = new PdfPTable(6); // 3 columnas

                // Encabezados de la tabla
                PdfPCell cell1 = new PdfPCell(new Phrase("ci destinatario"));
                PdfPCell cell2 = new PdfPCell(new Phrase("nombre remitente"));
                PdfPCell cell3 = new PdfPCell(new Phrase("apellido remitente"));
                PdfPCell cell4 = new PdfPCell(new Phrase("nombre destinatario"));
                PdfPCell cell5 = new PdfPCell(new Phrase("apellido destinatario"));
                PdfPCell cell6 = new PdfPCell(new Phrase("ci vendedora"));

                table.addCell(cell1);
                table.addCell(cell2);
                table.addCell(cell3);
                table.addCell(cell4);
                table.addCell(cell5);
                table.addCell(cell6);

                // Llenar la tabla con los datos
                while (resultSet.next()) {
                    table.addCell(resultSet.getString("ci_destinatario"));
                    table.addCell(resultSet.getString("nombre_remitente"));
                    table.addCell(resultSet.getString("apellidos_remitente"));
                    table.addCell(resultSet.getString("nombre_destinatario"));
                    table.addCell(resultSet.getString("apellidos_destinatario"));
                    table.addCell(resultSet.getString("ci_vendedora"));
                }
                // Agregar la tabla al documento
                document.add(table);
                document.close();

                // Abrir el PDF generado
                File pdfFile = new File(rutaSalida);
                if (Desktop.isDesktopSupported()) {
                    Desktop.getDesktop().open(pdfFile);
                } else {
                    System.out.println("El sistema no soporta la apertura de archivos.");
                }

                // Cerrar conexión
                conn.desconectar();
            } else {
                System.out.println("Error al conectar con la base de datos.");
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cbuscar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JButton n;
    // End of variables declaration//GEN-END:variables
}
